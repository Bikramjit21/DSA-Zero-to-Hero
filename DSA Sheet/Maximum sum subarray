Brute force

#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin>>n;
    
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }

    int maxi = INT_MIN;    
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            int sum = 0;
            for(int k=i;k<=j;k++){
                sum += a[k];
            }
            maxi = max(maxi,sum);
        }
    }
    cout<<maxi<<endl;
    return 0;
}

Cumulative Sum Method

#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin>>n;
    
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }

    int currSum[n+1];
    currSum[0] = 0;
    
    for(int i=1;i<=n;i++){
        currSum[i] = currSum[i-1] + a[i-1];
    }
    
    int maxSum = INT_MIN;
    for(int i=1;i<=n;i++){
        int sum = 0;
        for(int j=0;j<i;j++){
            sum = currSum[i] - currSum[j];
            maxSum = max(sum, maxSum);
        }
    }
    
    cout<<maxSum;
    return 0;
}

Kadane's Algorithm

#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin>>n;
    
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }

    int currSum = 0;
    int maxSum = INT_MIN;
    
    for(int i=0;i<n;i++){
        currSum+=a[i];
        if(currSum<0){
            currSum = 0;
        }
        maxSum = max(currSum,maxSum);
    }
    cout<<maxSum;
    return 0;
}
