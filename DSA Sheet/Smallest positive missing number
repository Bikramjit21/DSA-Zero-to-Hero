Problem:
You are given an array arr[] of N integers including 0. The task is to find the smallest positive number missing from the array.

Constraints:
1 <= N <= 10^6
-10^6 <= A of i <= 10^6

Example:
Input:
5
1 -2 3 -5 7

Output:
2

Explanation:
Since we have to find the positive numbers so negative numbers are neglected. Now the smallest positive number missing in the array is 2. So its the output.

Solution:
#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin>>n;
    
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    
    const int N = 1e6 + 2;
    bool check[N];
    for(int i=0;i<N;i++){
        check[i] = false;
    }
    for(int i=0;i<n;i++){
        if(a[i]>=0){
            check[a[i]] = true;
        }
    }
    int ans = -1;
    for(int i=0;i<N;i++){
        if(check[i]==false){
            ans = i;
            break;
        }
    }
    cout<<ans<<endl;
    return 0;
}
